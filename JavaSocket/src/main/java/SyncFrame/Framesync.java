// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: framesync.proto

package SyncFrame;

public final class Framesync {
  private Framesync() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *同步类型枚举
   * </pre>
   *
   * Protobuf enum {@code SyncFrame.FrameSyncDataType}
   */
  public enum FrameSyncDataType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COMMON_UNKNOW_SYNCTYPE = 0;</code>
     */
    COMMON_UNKNOW_SYNCTYPE(0),
    /**
     * <pre>
     *连接
     * </pre>
     *
     * <code>FRAME_SYNC_CONNECT = 1;</code>
     */
    FRAME_SYNC_CONNECT(1),
    /**
     * <pre>
     *预备
     * </pre>
     *
     * <code>FRAME_SYNC_READY = 2;</code>
     */
    FRAME_SYNC_READY(2),
    /**
     * <pre>
     *开始
     * </pre>
     *
     * <code>FRAME_SYNC_START = 3;</code>
     */
    FRAME_SYNC_START(3),
    /**
     * <pre>
     *同步位置
     * </pre>
     *
     * <code>FRAME_SYNC_CHANGE_POS = 4;</code>
     */
    FRAME_SYNC_CHANGE_POS(4),
    /**
     * <pre>
     *同步释放技能
     * </pre>
     *
     * <code>FRAME_SYNC_PLAY_SKILL = 5;</code>
     */
    FRAME_SYNC_PLAY_SKILL(5),
    /**
     * <pre>
     *同步开始移动操作
     * </pre>
     *
     * <code>FRAME_SYNC_MOVE_START = 6;</code>
     */
    FRAME_SYNC_MOVE_START(6),
    /**
     * <pre>
     *同步移动操作速度
     * </pre>
     *
     * <code>FRAME_SYNC_MOVE_SPEED = 7;</code>
     */
    FRAME_SYNC_MOVE_SPEED(7),
    /**
     * <pre>
     *同步停止移动操作
     * </pre>
     *
     * <code>FRAME_SYNC_MOVE_END = 8;</code>
     */
    FRAME_SYNC_MOVE_END(8),
    /**
     * <pre>
     *结束
     * </pre>
     *
     * <code>FRAME_SYNC_END = 22;</code>
     */
    FRAME_SYNC_END(22),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>COMMON_UNKNOW_SYNCTYPE = 0;</code>
     */
    public static final int COMMON_UNKNOW_SYNCTYPE_VALUE = 0;
    /**
     * <pre>
     *连接
     * </pre>
     *
     * <code>FRAME_SYNC_CONNECT = 1;</code>
     */
    public static final int FRAME_SYNC_CONNECT_VALUE = 1;
    /**
     * <pre>
     *预备
     * </pre>
     *
     * <code>FRAME_SYNC_READY = 2;</code>
     */
    public static final int FRAME_SYNC_READY_VALUE = 2;
    /**
     * <pre>
     *开始
     * </pre>
     *
     * <code>FRAME_SYNC_START = 3;</code>
     */
    public static final int FRAME_SYNC_START_VALUE = 3;
    /**
     * <pre>
     *同步位置
     * </pre>
     *
     * <code>FRAME_SYNC_CHANGE_POS = 4;</code>
     */
    public static final int FRAME_SYNC_CHANGE_POS_VALUE = 4;
    /**
     * <pre>
     *同步释放技能
     * </pre>
     *
     * <code>FRAME_SYNC_PLAY_SKILL = 5;</code>
     */
    public static final int FRAME_SYNC_PLAY_SKILL_VALUE = 5;
    /**
     * <pre>
     *同步开始移动操作
     * </pre>
     *
     * <code>FRAME_SYNC_MOVE_START = 6;</code>
     */
    public static final int FRAME_SYNC_MOVE_START_VALUE = 6;
    /**
     * <pre>
     *同步移动操作速度
     * </pre>
     *
     * <code>FRAME_SYNC_MOVE_SPEED = 7;</code>
     */
    public static final int FRAME_SYNC_MOVE_SPEED_VALUE = 7;
    /**
     * <pre>
     *同步停止移动操作
     * </pre>
     *
     * <code>FRAME_SYNC_MOVE_END = 8;</code>
     */
    public static final int FRAME_SYNC_MOVE_END_VALUE = 8;
    /**
     * <pre>
     *结束
     * </pre>
     *
     * <code>FRAME_SYNC_END = 22;</code>
     */
    public static final int FRAME_SYNC_END_VALUE = 22;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static FrameSyncDataType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FrameSyncDataType forNumber(int value) {
      switch (value) {
        case 0: return COMMON_UNKNOW_SYNCTYPE;
        case 1: return FRAME_SYNC_CONNECT;
        case 2: return FRAME_SYNC_READY;
        case 3: return FRAME_SYNC_START;
        case 4: return FRAME_SYNC_CHANGE_POS;
        case 5: return FRAME_SYNC_PLAY_SKILL;
        case 6: return FRAME_SYNC_MOVE_START;
        case 7: return FRAME_SYNC_MOVE_SPEED;
        case 8: return FRAME_SYNC_MOVE_END;
        case 22: return FRAME_SYNC_END;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FrameSyncDataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FrameSyncDataType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FrameSyncDataType>() {
            public FrameSyncDataType findValueByNumber(int number) {
              return FrameSyncDataType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Framesync.getDescriptor().getEnumTypes().get(0);
    }

    private static final FrameSyncDataType[] VALUES = values();

    public static FrameSyncDataType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FrameSyncDataType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SyncFrame.FrameSyncDataType)
  }

  public interface SyncMechaInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SyncFrame.SyncMechaInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 zoneId = 1;</code>
     * @return The zoneId.
     */
    int getZoneId();

    /**
     * <code>int32 playerId = 2;</code>
     * @return The playerId.
     */
    int getPlayerId();
  }
  /**
   * Protobuf type {@code SyncFrame.SyncMechaInfo}
   */
  public static final class SyncMechaInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SyncFrame.SyncMechaInfo)
      SyncMechaInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SyncMechaInfo.newBuilder() to construct.
    private SyncMechaInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SyncMechaInfo() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new SyncMechaInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SyncMechaInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              zoneId_ = input.readInt32();
              break;
            }
            case 16: {

              playerId_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Framesync.internal_static_SyncFrame_SyncMechaInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Framesync.internal_static_SyncFrame_SyncMechaInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SyncMechaInfo.class, Builder.class);
    }

    public static final int ZONEID_FIELD_NUMBER = 1;
    private int zoneId_;
    /**
     * <code>int32 zoneId = 1;</code>
     * @return The zoneId.
     */
    @Override
    public int getZoneId() {
      return zoneId_;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>int32 playerId = 2;</code>
     * @return The playerId.
     */
    @Override
    public int getPlayerId() {
      return playerId_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (zoneId_ != 0) {
        output.writeInt32(1, zoneId_);
      }
      if (playerId_ != 0) {
        output.writeInt32(2, playerId_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (zoneId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, zoneId_);
      }
      if (playerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, playerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SyncMechaInfo)) {
        return super.equals(obj);
      }
      SyncMechaInfo other = (SyncMechaInfo) obj;

      if (getZoneId()
          != other.getZoneId()) return false;
      if (getPlayerId()
          != other.getPlayerId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ZONEID_FIELD_NUMBER;
      hash = (53 * hash) + getZoneId();
      hash = (37 * hash) + PLAYERID_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SyncMechaInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SyncMechaInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SyncMechaInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SyncMechaInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SyncMechaInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SyncMechaInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SyncMechaInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SyncMechaInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SyncMechaInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SyncMechaInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SyncMechaInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SyncMechaInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SyncMechaInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SyncFrame.SyncMechaInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SyncFrame.SyncMechaInfo)
        SyncMechaInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Framesync.internal_static_SyncFrame_SyncMechaInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Framesync.internal_static_SyncFrame_SyncMechaInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SyncMechaInfo.class, Builder.class);
      }

      // Construct using SyncFrame.Framesync.SyncMechaInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        zoneId_ = 0;

        playerId_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Framesync.internal_static_SyncFrame_SyncMechaInfo_descriptor;
      }

      @Override
      public SyncMechaInfo getDefaultInstanceForType() {
        return SyncMechaInfo.getDefaultInstance();
      }

      @Override
      public SyncMechaInfo build() {
        SyncMechaInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SyncMechaInfo buildPartial() {
        SyncMechaInfo result = new SyncMechaInfo(this);
        result.zoneId_ = zoneId_;
        result.playerId_ = playerId_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SyncMechaInfo) {
          return mergeFrom((SyncMechaInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SyncMechaInfo other) {
        if (other == SyncMechaInfo.getDefaultInstance()) return this;
        if (other.getZoneId() != 0) {
          setZoneId(other.getZoneId());
        }
        if (other.getPlayerId() != 0) {
          setPlayerId(other.getPlayerId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SyncMechaInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SyncMechaInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int zoneId_ ;
      /**
       * <code>int32 zoneId = 1;</code>
       * @return The zoneId.
       */
      @Override
      public int getZoneId() {
        return zoneId_;
      }
      /**
       * <code>int32 zoneId = 1;</code>
       * @param value The zoneId to set.
       * @return This builder for chaining.
       */
      public Builder setZoneId(int value) {
        
        zoneId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 zoneId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearZoneId() {
        
        zoneId_ = 0;
        onChanged();
        return this;
      }

      private int playerId_ ;
      /**
       * <code>int32 playerId = 2;</code>
       * @return The playerId.
       */
      @Override
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>int32 playerId = 2;</code>
       * @param value The playerId to set.
       * @return This builder for chaining.
       */
      public Builder setPlayerId(int value) {
        
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 playerId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayerId() {
        
        playerId_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SyncFrame.SyncMechaInfo)
    }

    // @@protoc_insertion_point(class_scope:SyncFrame.SyncMechaInfo)
    private static final SyncMechaInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SyncMechaInfo();
    }

    public static SyncMechaInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SyncMechaInfo>
        PARSER = new com.google.protobuf.AbstractParser<SyncMechaInfo>() {
      @Override
      public SyncMechaInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SyncMechaInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SyncMechaInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SyncMechaInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public SyncMechaInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FrameSyncDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SyncFrame.FrameSyncData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *帧同步数据对象信息
     * </pre>
     *
     * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
     * @return Whether the syncObj field is set.
     */
    boolean hasSyncObj();
    /**
     * <pre>
     *帧同步数据对象信息
     * </pre>
     *
     * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
     * @return The syncObj.
     */
    SyncMechaInfo getSyncObj();
    /**
     * <pre>
     *帧同步数据对象信息
     * </pre>
     *
     * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
     */
    SyncMechaInfoOrBuilder getSyncObjOrBuilder();

    /**
     * <pre>
     *帧同步数据类型
     * </pre>
     *
     * <code>.SyncFrame.FrameSyncDataType frameSyncDataType = 1;</code>
     * @return The enum numeric value on the wire for frameSyncDataType.
     */
    int getFrameSyncDataTypeValue();
    /**
     * <pre>
     *帧同步数据类型
     * </pre>
     *
     * <code>.SyncFrame.FrameSyncDataType frameSyncDataType = 1;</code>
     * @return The frameSyncDataType.
     */
    FrameSyncDataType getFrameSyncDataType();

    /**
     * <pre>
     *具体同步对象的pb字节数组
     * </pre>
     *
     * <code>bytes frameSyncBytes = 2;</code>
     * @return The frameSyncBytes.
     */
    com.google.protobuf.ByteString getFrameSyncBytes();
  }
  /**
   * <pre>
   *通知客户端做数据变更的具体数据信息
   * </pre>
   *
   * Protobuf type {@code SyncFrame.FrameSyncData}
   */
  public static final class FrameSyncData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SyncFrame.FrameSyncData)
      FrameSyncDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FrameSyncData.newBuilder() to construct.
    private FrameSyncData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FrameSyncData() {
      frameSyncDataType_ = 0;
      frameSyncBytes_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new FrameSyncData();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FrameSyncData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              frameSyncDataType_ = rawValue;
              break;
            }
            case 18: {

              frameSyncBytes_ = input.readBytes();
              break;
            }
            case 34: {
              SyncMechaInfo.Builder subBuilder = null;
              if (syncObj_ != null) {
                subBuilder = syncObj_.toBuilder();
              }
              syncObj_ = input.readMessage(SyncMechaInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(syncObj_);
                syncObj_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Framesync.internal_static_SyncFrame_FrameSyncData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Framesync.internal_static_SyncFrame_FrameSyncData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FrameSyncData.class, Builder.class);
    }

    public static final int SYNCOBJ_FIELD_NUMBER = 4;
    private SyncMechaInfo syncObj_;
    /**
     * <pre>
     *帧同步数据对象信息
     * </pre>
     *
     * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
     * @return Whether the syncObj field is set.
     */
    @Override
    public boolean hasSyncObj() {
      return syncObj_ != null;
    }
    /**
     * <pre>
     *帧同步数据对象信息
     * </pre>
     *
     * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
     * @return The syncObj.
     */
    @Override
    public SyncMechaInfo getSyncObj() {
      return syncObj_ == null ? SyncMechaInfo.getDefaultInstance() : syncObj_;
    }
    /**
     * <pre>
     *帧同步数据对象信息
     * </pre>
     *
     * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
     */
    @Override
    public SyncMechaInfoOrBuilder getSyncObjOrBuilder() {
      return getSyncObj();
    }

    public static final int FRAMESYNCDATATYPE_FIELD_NUMBER = 1;
    private int frameSyncDataType_;
    /**
     * <pre>
     *帧同步数据类型
     * </pre>
     *
     * <code>.SyncFrame.FrameSyncDataType frameSyncDataType = 1;</code>
     * @return The enum numeric value on the wire for frameSyncDataType.
     */
    @Override public int getFrameSyncDataTypeValue() {
      return frameSyncDataType_;
    }
    /**
     * <pre>
     *帧同步数据类型
     * </pre>
     *
     * <code>.SyncFrame.FrameSyncDataType frameSyncDataType = 1;</code>
     * @return The frameSyncDataType.
     */
    @Override public FrameSyncDataType getFrameSyncDataType() {
      @SuppressWarnings("deprecation")
      FrameSyncDataType result = FrameSyncDataType.valueOf(frameSyncDataType_);
      return result == null ? FrameSyncDataType.UNRECOGNIZED : result;
    }

    public static final int FRAMESYNCBYTES_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString frameSyncBytes_;
    /**
     * <pre>
     *具体同步对象的pb字节数组
     * </pre>
     *
     * <code>bytes frameSyncBytes = 2;</code>
     * @return The frameSyncBytes.
     */
    @Override
    public com.google.protobuf.ByteString getFrameSyncBytes() {
      return frameSyncBytes_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (frameSyncDataType_ != FrameSyncDataType.COMMON_UNKNOW_SYNCTYPE.getNumber()) {
        output.writeEnum(1, frameSyncDataType_);
      }
      if (!frameSyncBytes_.isEmpty()) {
        output.writeBytes(2, frameSyncBytes_);
      }
      if (syncObj_ != null) {
        output.writeMessage(4, getSyncObj());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (frameSyncDataType_ != FrameSyncDataType.COMMON_UNKNOW_SYNCTYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, frameSyncDataType_);
      }
      if (!frameSyncBytes_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, frameSyncBytes_);
      }
      if (syncObj_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSyncObj());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FrameSyncData)) {
        return super.equals(obj);
      }
      FrameSyncData other = (FrameSyncData) obj;

      if (hasSyncObj() != other.hasSyncObj()) return false;
      if (hasSyncObj()) {
        if (!getSyncObj()
            .equals(other.getSyncObj())) return false;
      }
      if (frameSyncDataType_ != other.frameSyncDataType_) return false;
      if (!getFrameSyncBytes()
          .equals(other.getFrameSyncBytes())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSyncObj()) {
        hash = (37 * hash) + SYNCOBJ_FIELD_NUMBER;
        hash = (53 * hash) + getSyncObj().hashCode();
      }
      hash = (37 * hash) + FRAMESYNCDATATYPE_FIELD_NUMBER;
      hash = (53 * hash) + frameSyncDataType_;
      hash = (37 * hash) + FRAMESYNCBYTES_FIELD_NUMBER;
      hash = (53 * hash) + getFrameSyncBytes().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FrameSyncData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FrameSyncData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FrameSyncData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FrameSyncData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FrameSyncData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FrameSyncData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FrameSyncData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FrameSyncData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static FrameSyncData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static FrameSyncData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FrameSyncData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FrameSyncData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FrameSyncData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *通知客户端做数据变更的具体数据信息
     * </pre>
     *
     * Protobuf type {@code SyncFrame.FrameSyncData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SyncFrame.FrameSyncData)
        FrameSyncDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Framesync.internal_static_SyncFrame_FrameSyncData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Framesync.internal_static_SyncFrame_FrameSyncData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FrameSyncData.class, Builder.class);
      }

      // Construct using SyncFrame.Framesync.FrameSyncData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (syncObjBuilder_ == null) {
          syncObj_ = null;
        } else {
          syncObj_ = null;
          syncObjBuilder_ = null;
        }
        frameSyncDataType_ = 0;

        frameSyncBytes_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Framesync.internal_static_SyncFrame_FrameSyncData_descriptor;
      }

      @Override
      public FrameSyncData getDefaultInstanceForType() {
        return FrameSyncData.getDefaultInstance();
      }

      @Override
      public FrameSyncData build() {
        FrameSyncData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public FrameSyncData buildPartial() {
        FrameSyncData result = new FrameSyncData(this);
        if (syncObjBuilder_ == null) {
          result.syncObj_ = syncObj_;
        } else {
          result.syncObj_ = syncObjBuilder_.build();
        }
        result.frameSyncDataType_ = frameSyncDataType_;
        result.frameSyncBytes_ = frameSyncBytes_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FrameSyncData) {
          return mergeFrom((FrameSyncData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FrameSyncData other) {
        if (other == FrameSyncData.getDefaultInstance()) return this;
        if (other.hasSyncObj()) {
          mergeSyncObj(other.getSyncObj());
        }
        if (other.frameSyncDataType_ != 0) {
          setFrameSyncDataTypeValue(other.getFrameSyncDataTypeValue());
        }
        if (other.getFrameSyncBytes() != com.google.protobuf.ByteString.EMPTY) {
          setFrameSyncBytes(other.getFrameSyncBytes());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FrameSyncData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FrameSyncData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private SyncMechaInfo syncObj_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SyncMechaInfo, SyncMechaInfo.Builder, SyncMechaInfoOrBuilder> syncObjBuilder_;
      /**
       * <pre>
       *帧同步数据对象信息
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
       * @return Whether the syncObj field is set.
       */
      public boolean hasSyncObj() {
        return syncObjBuilder_ != null || syncObj_ != null;
      }
      /**
       * <pre>
       *帧同步数据对象信息
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
       * @return The syncObj.
       */
      public SyncMechaInfo getSyncObj() {
        if (syncObjBuilder_ == null) {
          return syncObj_ == null ? SyncMechaInfo.getDefaultInstance() : syncObj_;
        } else {
          return syncObjBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *帧同步数据对象信息
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
       */
      public Builder setSyncObj(SyncMechaInfo value) {
        if (syncObjBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          syncObj_ = value;
          onChanged();
        } else {
          syncObjBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *帧同步数据对象信息
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
       */
      public Builder setSyncObj(
          SyncMechaInfo.Builder builderForValue) {
        if (syncObjBuilder_ == null) {
          syncObj_ = builderForValue.build();
          onChanged();
        } else {
          syncObjBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *帧同步数据对象信息
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
       */
      public Builder mergeSyncObj(SyncMechaInfo value) {
        if (syncObjBuilder_ == null) {
          if (syncObj_ != null) {
            syncObj_ =
              SyncMechaInfo.newBuilder(syncObj_).mergeFrom(value).buildPartial();
          } else {
            syncObj_ = value;
          }
          onChanged();
        } else {
          syncObjBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *帧同步数据对象信息
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
       */
      public Builder clearSyncObj() {
        if (syncObjBuilder_ == null) {
          syncObj_ = null;
          onChanged();
        } else {
          syncObj_ = null;
          syncObjBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *帧同步数据对象信息
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
       */
      public SyncMechaInfo.Builder getSyncObjBuilder() {
        
        onChanged();
        return getSyncObjFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *帧同步数据对象信息
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
       */
      public SyncMechaInfoOrBuilder getSyncObjOrBuilder() {
        if (syncObjBuilder_ != null) {
          return syncObjBuilder_.getMessageOrBuilder();
        } else {
          return syncObj_ == null ?
              SyncMechaInfo.getDefaultInstance() : syncObj_;
        }
      }
      /**
       * <pre>
       *帧同步数据对象信息
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SyncMechaInfo, SyncMechaInfo.Builder, SyncMechaInfoOrBuilder>
          getSyncObjFieldBuilder() {
        if (syncObjBuilder_ == null) {
          syncObjBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SyncMechaInfo, SyncMechaInfo.Builder, SyncMechaInfoOrBuilder>(
                  getSyncObj(),
                  getParentForChildren(),
                  isClean());
          syncObj_ = null;
        }
        return syncObjBuilder_;
      }

      private int frameSyncDataType_ = 0;
      /**
       * <pre>
       *帧同步数据类型
       * </pre>
       *
       * <code>.SyncFrame.FrameSyncDataType frameSyncDataType = 1;</code>
       * @return The enum numeric value on the wire for frameSyncDataType.
       */
      @Override public int getFrameSyncDataTypeValue() {
        return frameSyncDataType_;
      }
      /**
       * <pre>
       *帧同步数据类型
       * </pre>
       *
       * <code>.SyncFrame.FrameSyncDataType frameSyncDataType = 1;</code>
       * @param value The enum numeric value on the wire for frameSyncDataType to set.
       * @return This builder for chaining.
       */
      public Builder setFrameSyncDataTypeValue(int value) {
        
        frameSyncDataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *帧同步数据类型
       * </pre>
       *
       * <code>.SyncFrame.FrameSyncDataType frameSyncDataType = 1;</code>
       * @return The frameSyncDataType.
       */
      @Override
      public FrameSyncDataType getFrameSyncDataType() {
        @SuppressWarnings("deprecation")
        FrameSyncDataType result = FrameSyncDataType.valueOf(frameSyncDataType_);
        return result == null ? FrameSyncDataType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *帧同步数据类型
       * </pre>
       *
       * <code>.SyncFrame.FrameSyncDataType frameSyncDataType = 1;</code>
       * @param value The frameSyncDataType to set.
       * @return This builder for chaining.
       */
      public Builder setFrameSyncDataType(FrameSyncDataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        frameSyncDataType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *帧同步数据类型
       * </pre>
       *
       * <code>.SyncFrame.FrameSyncDataType frameSyncDataType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrameSyncDataType() {
        
        frameSyncDataType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString frameSyncBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *具体同步对象的pb字节数组
       * </pre>
       *
       * <code>bytes frameSyncBytes = 2;</code>
       * @return The frameSyncBytes.
       */
      @Override
      public com.google.protobuf.ByteString getFrameSyncBytes() {
        return frameSyncBytes_;
      }
      /**
       * <pre>
       *具体同步对象的pb字节数组
       * </pre>
       *
       * <code>bytes frameSyncBytes = 2;</code>
       * @param value The frameSyncBytes to set.
       * @return This builder for chaining.
       */
      public Builder setFrameSyncBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        frameSyncBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *具体同步对象的pb字节数组
       * </pre>
       *
       * <code>bytes frameSyncBytes = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrameSyncBytes() {
        
        frameSyncBytes_ = getDefaultInstance().getFrameSyncBytes();
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SyncFrame.FrameSyncData)
    }

    // @@protoc_insertion_point(class_scope:SyncFrame.FrameSyncData)
    private static final FrameSyncData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FrameSyncData();
    }

    public static FrameSyncData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FrameSyncData>
        PARSER = new com.google.protobuf.AbstractParser<FrameSyncData>() {
      @Override
      public FrameSyncData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FrameSyncData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FrameSyncData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<FrameSyncData> getParserForType() {
      return PARSER;
    }

    @Override
    public FrameSyncData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FrameSyncDataArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SyncFrame.FrameSyncDataArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *距离上一帧的时间差值，以秒为单位,客户端帧间时差以这个为准来运算
     * </pre>
     *
     * <code>float deltaTimeFloat = 15;</code>
     * @return The deltaTimeFloat.
     */
    float getDeltaTimeFloat();

    /**
     * <pre>
     *战斗持续的总时间，单位毫秒
     * </pre>
     *
     * <code>int64 totalTime = 8;</code>
     * @return The totalTime.
     */
    long getTotalTime();

    /**
     * <pre>
     *同步随机数种子
     * </pre>
     *
     * <code>int32 randomSeed = 9;</code>
     * @return The randomSeed.
     */
    int getRandomSeed();

    /**
     * <pre>
     *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
     * </pre>
     *
     * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
     * @return Whether the syncObj field is set.
     */
    boolean hasSyncObj();
    /**
     * <pre>
     *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
     * </pre>
     *
     * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
     * @return The syncObj.
     */
    SyncMechaInfo getSyncObj();
    /**
     * <pre>
     *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
     * </pre>
     *
     * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
     */
    SyncMechaInfoOrBuilder getSyncObjOrBuilder();

    /**
     * <pre>
     *战斗sessionId
     * </pre>
     *
     * <code>int32 pkSessionId = 3;</code>
     * @return The pkSessionId.
     */
    int getPkSessionId();

    /**
     * <pre>
     *战斗服务器同步的服务器帧id，客户端上报时则表示是客户端收到过的服务器最近一次帧id
     * </pre>
     *
     * <code>int32 frameIndex = 2;</code>
     * @return The frameIndex.
     */
    int getFrameIndex();

    /**
     * <pre>
     *客户端上报专用的本地帧序号，用于服务器过滤重复帧或旧帧
     * </pre>
     *
     * <code>int32 clientSeq = 4;</code>
     * @return The clientSeq.
     */
    int getClientSeq();

    /**
     * <pre>
     *0到多个同步数据信息
     * </pre>
     *
     * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
     */
    java.util.List<FrameSyncData>
        getSyncsList();
    /**
     * <pre>
     *0到多个同步数据信息
     * </pre>
     *
     * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
     */
    FrameSyncData getSyncs(int index);
    /**
     * <pre>
     *0到多个同步数据信息
     * </pre>
     *
     * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
     */
    int getSyncsCount();
    /**
     * <pre>
     *0到多个同步数据信息
     * </pre>
     *
     * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
     */
    java.util.List<? extends FrameSyncDataOrBuilder>
        getSyncsOrBuilderList();
    /**
     * <pre>
     *0到多个同步数据信息
     * </pre>
     *
     * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
     */
    FrameSyncDataOrBuilder getSyncsOrBuilder(
            int index);

    /**
     * <pre>
     *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
     */
    java.util.List<StringStringKeyValue>
        getPlayerAIList();
    /**
     * <pre>
     *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
     */
    StringStringKeyValue getPlayerAI(int index);
    /**
     * <pre>
     *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
     */
    int getPlayerAICount();
    /**
     * <pre>
     *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
     */
    java.util.List<? extends StringStringKeyValueOrBuilder>
        getPlayerAIOrBuilderList();
    /**
     * <pre>
     *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
     */
    StringStringKeyValueOrBuilder getPlayerAIOrBuilder(
            int index);

    /**
     * <pre>
     *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
     */
    java.util.List<IntStringKeyValue>
        getNpcAIList();
    /**
     * <pre>
     *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
     */
    IntStringKeyValue getNpcAI(int index);
    /**
     * <pre>
     *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
     */
    int getNpcAICount();
    /**
     * <pre>
     *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
     */
    java.util.List<? extends IntStringKeyValueOrBuilder>
        getNpcAIOrBuilderList();
    /**
     * <pre>
     *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
     */
    IntStringKeyValueOrBuilder getNpcAIOrBuilder(
            int index);
  }
  /**
   * <pre>
   *通知客户端做数据变更的具体信息数组
   * </pre>
   *
   * Protobuf type {@code SyncFrame.FrameSyncDataArray}
   */
  public static final class FrameSyncDataArray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SyncFrame.FrameSyncDataArray)
      FrameSyncDataArrayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FrameSyncDataArray.newBuilder() to construct.
    private FrameSyncDataArray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FrameSyncDataArray() {
      syncs_ = java.util.Collections.emptyList();
      playerAI_ = java.util.Collections.emptyList();
      npcAI_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new FrameSyncDataArray();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FrameSyncDataArray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                syncs_ = new java.util.ArrayList<FrameSyncData>();
                mutable_bitField0_ |= 0x00000001;
              }
              syncs_.add(
                  input.readMessage(FrameSyncData.parser(), extensionRegistry));
              break;
            }
            case 16: {

              frameIndex_ = input.readInt32();
              break;
            }
            case 24: {

              pkSessionId_ = input.readInt32();
              break;
            }
            case 32: {

              clientSeq_ = input.readInt32();
              break;
            }
            case 42: {
              SyncMechaInfo.Builder subBuilder = null;
              if (syncObj_ != null) {
                subBuilder = syncObj_.toBuilder();
              }
              syncObj_ = input.readMessage(SyncMechaInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(syncObj_);
                syncObj_ = subBuilder.buildPartial();
              }

              break;
            }
            case 64: {

              totalTime_ = input.readInt64();
              break;
            }
            case 72: {

              randomSeed_ = input.readInt32();
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                playerAI_ = new java.util.ArrayList<StringStringKeyValue>();
                mutable_bitField0_ |= 0x00000002;
              }
              playerAI_.add(
                  input.readMessage(StringStringKeyValue.parser(), extensionRegistry));
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                npcAI_ = new java.util.ArrayList<IntStringKeyValue>();
                mutable_bitField0_ |= 0x00000004;
              }
              npcAI_.add(
                  input.readMessage(IntStringKeyValue.parser(), extensionRegistry));
              break;
            }
            case 125: {

              deltaTimeFloat_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          syncs_ = java.util.Collections.unmodifiableList(syncs_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          playerAI_ = java.util.Collections.unmodifiableList(playerAI_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          npcAI_ = java.util.Collections.unmodifiableList(npcAI_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Framesync.internal_static_SyncFrame_FrameSyncDataArray_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Framesync.internal_static_SyncFrame_FrameSyncDataArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FrameSyncDataArray.class, Builder.class);
    }

    public static final int DELTATIMEFLOAT_FIELD_NUMBER = 15;
    private float deltaTimeFloat_;
    /**
     * <pre>
     *距离上一帧的时间差值，以秒为单位,客户端帧间时差以这个为准来运算
     * </pre>
     *
     * <code>float deltaTimeFloat = 15;</code>
     * @return The deltaTimeFloat.
     */
    @Override
    public float getDeltaTimeFloat() {
      return deltaTimeFloat_;
    }

    public static final int TOTALTIME_FIELD_NUMBER = 8;
    private long totalTime_;
    /**
     * <pre>
     *战斗持续的总时间，单位毫秒
     * </pre>
     *
     * <code>int64 totalTime = 8;</code>
     * @return The totalTime.
     */
    @Override
    public long getTotalTime() {
      return totalTime_;
    }

    public static final int RANDOMSEED_FIELD_NUMBER = 9;
    private int randomSeed_;
    /**
     * <pre>
     *同步随机数种子
     * </pre>
     *
     * <code>int32 randomSeed = 9;</code>
     * @return The randomSeed.
     */
    @Override
    public int getRandomSeed() {
      return randomSeed_;
    }

    public static final int SYNCOBJ_FIELD_NUMBER = 5;
    private SyncMechaInfo syncObj_;
    /**
     * <pre>
     *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
     * </pre>
     *
     * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
     * @return Whether the syncObj field is set.
     */
    @Override
    public boolean hasSyncObj() {
      return syncObj_ != null;
    }
    /**
     * <pre>
     *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
     * </pre>
     *
     * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
     * @return The syncObj.
     */
    @Override
    public SyncMechaInfo getSyncObj() {
      return syncObj_ == null ? SyncMechaInfo.getDefaultInstance() : syncObj_;
    }
    /**
     * <pre>
     *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
     * </pre>
     *
     * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
     */
    @Override
    public SyncMechaInfoOrBuilder getSyncObjOrBuilder() {
      return getSyncObj();
    }

    public static final int PKSESSIONID_FIELD_NUMBER = 3;
    private int pkSessionId_;
    /**
     * <pre>
     *战斗sessionId
     * </pre>
     *
     * <code>int32 pkSessionId = 3;</code>
     * @return The pkSessionId.
     */
    @Override
    public int getPkSessionId() {
      return pkSessionId_;
    }

    public static final int FRAMEINDEX_FIELD_NUMBER = 2;
    private int frameIndex_;
    /**
     * <pre>
     *战斗服务器同步的服务器帧id，客户端上报时则表示是客户端收到过的服务器最近一次帧id
     * </pre>
     *
     * <code>int32 frameIndex = 2;</code>
     * @return The frameIndex.
     */
    @Override
    public int getFrameIndex() {
      return frameIndex_;
    }

    public static final int CLIENTSEQ_FIELD_NUMBER = 4;
    private int clientSeq_;
    /**
     * <pre>
     *客户端上报专用的本地帧序号，用于服务器过滤重复帧或旧帧
     * </pre>
     *
     * <code>int32 clientSeq = 4;</code>
     * @return The clientSeq.
     */
    @Override
    public int getClientSeq() {
      return clientSeq_;
    }

    public static final int SYNCS_FIELD_NUMBER = 1;
    private java.util.List<FrameSyncData> syncs_;
    /**
     * <pre>
     *0到多个同步数据信息
     * </pre>
     *
     * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
     */
    @Override
    public java.util.List<FrameSyncData> getSyncsList() {
      return syncs_;
    }
    /**
     * <pre>
     *0到多个同步数据信息
     * </pre>
     *
     * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
     */
    @Override
    public java.util.List<? extends FrameSyncDataOrBuilder>
        getSyncsOrBuilderList() {
      return syncs_;
    }
    /**
     * <pre>
     *0到多个同步数据信息
     * </pre>
     *
     * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
     */
    @Override
    public int getSyncsCount() {
      return syncs_.size();
    }
    /**
     * <pre>
     *0到多个同步数据信息
     * </pre>
     *
     * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
     */
    @Override
    public FrameSyncData getSyncs(int index) {
      return syncs_.get(index);
    }
    /**
     * <pre>
     *0到多个同步数据信息
     * </pre>
     *
     * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
     */
    @Override
    public FrameSyncDataOrBuilder getSyncsOrBuilder(
        int index) {
      return syncs_.get(index);
    }

    public static final int PLAYERAI_FIELD_NUMBER = 13;
    private java.util.List<StringStringKeyValue> playerAI_;
    /**
     * <pre>
     *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
     */
    @Override
    public java.util.List<StringStringKeyValue> getPlayerAIList() {
      return playerAI_;
    }
    /**
     * <pre>
     *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
     */
    @Override
    public java.util.List<? extends StringStringKeyValueOrBuilder>
        getPlayerAIOrBuilderList() {
      return playerAI_;
    }
    /**
     * <pre>
     *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
     */
    @Override
    public int getPlayerAICount() {
      return playerAI_.size();
    }
    /**
     * <pre>
     *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
     */
    @Override
    public StringStringKeyValue getPlayerAI(int index) {
      return playerAI_.get(index);
    }
    /**
     * <pre>
     *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
     */
    @Override
    public StringStringKeyValueOrBuilder getPlayerAIOrBuilder(
        int index) {
      return playerAI_.get(index);
    }

    public static final int NPCAI_FIELD_NUMBER = 14;
    private java.util.List<IntStringKeyValue> npcAI_;
    /**
     * <pre>
     *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
     */
    @Override
    public java.util.List<IntStringKeyValue> getNpcAIList() {
      return npcAI_;
    }
    /**
     * <pre>
     *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
     */
    @Override
    public java.util.List<? extends IntStringKeyValueOrBuilder>
        getNpcAIOrBuilderList() {
      return npcAI_;
    }
    /**
     * <pre>
     *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
     */
    @Override
    public int getNpcAICount() {
      return npcAI_.size();
    }
    /**
     * <pre>
     *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
     */
    @Override
    public IntStringKeyValue getNpcAI(int index) {
      return npcAI_.get(index);
    }
    /**
     * <pre>
     *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
     * </pre>
     *
     * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
     */
    @Override
    public IntStringKeyValueOrBuilder getNpcAIOrBuilder(
        int index) {
      return npcAI_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < syncs_.size(); i++) {
        output.writeMessage(1, syncs_.get(i));
      }
      if (frameIndex_ != 0) {
        output.writeInt32(2, frameIndex_);
      }
      if (pkSessionId_ != 0) {
        output.writeInt32(3, pkSessionId_);
      }
      if (clientSeq_ != 0) {
        output.writeInt32(4, clientSeq_);
      }
      if (syncObj_ != null) {
        output.writeMessage(5, getSyncObj());
      }
      if (totalTime_ != 0L) {
        output.writeInt64(8, totalTime_);
      }
      if (randomSeed_ != 0) {
        output.writeInt32(9, randomSeed_);
      }
      for (int i = 0; i < playerAI_.size(); i++) {
        output.writeMessage(13, playerAI_.get(i));
      }
      for (int i = 0; i < npcAI_.size(); i++) {
        output.writeMessage(14, npcAI_.get(i));
      }
      if (deltaTimeFloat_ != 0F) {
        output.writeFloat(15, deltaTimeFloat_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < syncs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, syncs_.get(i));
      }
      if (frameIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, frameIndex_);
      }
      if (pkSessionId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pkSessionId_);
      }
      if (clientSeq_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, clientSeq_);
      }
      if (syncObj_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSyncObj());
      }
      if (totalTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, totalTime_);
      }
      if (randomSeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, randomSeed_);
      }
      for (int i = 0; i < playerAI_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, playerAI_.get(i));
      }
      for (int i = 0; i < npcAI_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, npcAI_.get(i));
      }
      if (deltaTimeFloat_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, deltaTimeFloat_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FrameSyncDataArray)) {
        return super.equals(obj);
      }
      FrameSyncDataArray other = (FrameSyncDataArray) obj;

      if (Float.floatToIntBits(getDeltaTimeFloat())
          != Float.floatToIntBits(
              other.getDeltaTimeFloat())) return false;
      if (getTotalTime()
          != other.getTotalTime()) return false;
      if (getRandomSeed()
          != other.getRandomSeed()) return false;
      if (hasSyncObj() != other.hasSyncObj()) return false;
      if (hasSyncObj()) {
        if (!getSyncObj()
            .equals(other.getSyncObj())) return false;
      }
      if (getPkSessionId()
          != other.getPkSessionId()) return false;
      if (getFrameIndex()
          != other.getFrameIndex()) return false;
      if (getClientSeq()
          != other.getClientSeq()) return false;
      if (!getSyncsList()
          .equals(other.getSyncsList())) return false;
      if (!getPlayerAIList()
          .equals(other.getPlayerAIList())) return false;
      if (!getNpcAIList()
          .equals(other.getNpcAIList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DELTATIMEFLOAT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getDeltaTimeFloat());
      hash = (37 * hash) + TOTALTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalTime());
      hash = (37 * hash) + RANDOMSEED_FIELD_NUMBER;
      hash = (53 * hash) + getRandomSeed();
      if (hasSyncObj()) {
        hash = (37 * hash) + SYNCOBJ_FIELD_NUMBER;
        hash = (53 * hash) + getSyncObj().hashCode();
      }
      hash = (37 * hash) + PKSESSIONID_FIELD_NUMBER;
      hash = (53 * hash) + getPkSessionId();
      hash = (37 * hash) + FRAMEINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getFrameIndex();
      hash = (37 * hash) + CLIENTSEQ_FIELD_NUMBER;
      hash = (53 * hash) + getClientSeq();
      if (getSyncsCount() > 0) {
        hash = (37 * hash) + SYNCS_FIELD_NUMBER;
        hash = (53 * hash) + getSyncsList().hashCode();
      }
      if (getPlayerAICount() > 0) {
        hash = (37 * hash) + PLAYERAI_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerAIList().hashCode();
      }
      if (getNpcAICount() > 0) {
        hash = (37 * hash) + NPCAI_FIELD_NUMBER;
        hash = (53 * hash) + getNpcAIList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FrameSyncDataArray parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FrameSyncDataArray parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FrameSyncDataArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FrameSyncDataArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FrameSyncDataArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FrameSyncDataArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FrameSyncDataArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FrameSyncDataArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static FrameSyncDataArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static FrameSyncDataArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FrameSyncDataArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FrameSyncDataArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FrameSyncDataArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *通知客户端做数据变更的具体信息数组
     * </pre>
     *
     * Protobuf type {@code SyncFrame.FrameSyncDataArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SyncFrame.FrameSyncDataArray)
        FrameSyncDataArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Framesync.internal_static_SyncFrame_FrameSyncDataArray_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Framesync.internal_static_SyncFrame_FrameSyncDataArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FrameSyncDataArray.class, Builder.class);
      }

      // Construct using SyncFrame.Framesync.FrameSyncDataArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSyncsFieldBuilder();
          getPlayerAIFieldBuilder();
          getNpcAIFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        deltaTimeFloat_ = 0F;

        totalTime_ = 0L;

        randomSeed_ = 0;

        if (syncObjBuilder_ == null) {
          syncObj_ = null;
        } else {
          syncObj_ = null;
          syncObjBuilder_ = null;
        }
        pkSessionId_ = 0;

        frameIndex_ = 0;

        clientSeq_ = 0;

        if (syncsBuilder_ == null) {
          syncs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          syncsBuilder_.clear();
        }
        if (playerAIBuilder_ == null) {
          playerAI_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playerAIBuilder_.clear();
        }
        if (npcAIBuilder_ == null) {
          npcAI_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          npcAIBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Framesync.internal_static_SyncFrame_FrameSyncDataArray_descriptor;
      }

      @Override
      public FrameSyncDataArray getDefaultInstanceForType() {
        return FrameSyncDataArray.getDefaultInstance();
      }

      @Override
      public FrameSyncDataArray build() {
        FrameSyncDataArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public FrameSyncDataArray buildPartial() {
        FrameSyncDataArray result = new FrameSyncDataArray(this);
        int from_bitField0_ = bitField0_;
        result.deltaTimeFloat_ = deltaTimeFloat_;
        result.totalTime_ = totalTime_;
        result.randomSeed_ = randomSeed_;
        if (syncObjBuilder_ == null) {
          result.syncObj_ = syncObj_;
        } else {
          result.syncObj_ = syncObjBuilder_.build();
        }
        result.pkSessionId_ = pkSessionId_;
        result.frameIndex_ = frameIndex_;
        result.clientSeq_ = clientSeq_;
        if (syncsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            syncs_ = java.util.Collections.unmodifiableList(syncs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.syncs_ = syncs_;
        } else {
          result.syncs_ = syncsBuilder_.build();
        }
        if (playerAIBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            playerAI_ = java.util.Collections.unmodifiableList(playerAI_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.playerAI_ = playerAI_;
        } else {
          result.playerAI_ = playerAIBuilder_.build();
        }
        if (npcAIBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            npcAI_ = java.util.Collections.unmodifiableList(npcAI_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.npcAI_ = npcAI_;
        } else {
          result.npcAI_ = npcAIBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FrameSyncDataArray) {
          return mergeFrom((FrameSyncDataArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FrameSyncDataArray other) {
        if (other == FrameSyncDataArray.getDefaultInstance()) return this;
        if (other.getDeltaTimeFloat() != 0F) {
          setDeltaTimeFloat(other.getDeltaTimeFloat());
        }
        if (other.getTotalTime() != 0L) {
          setTotalTime(other.getTotalTime());
        }
        if (other.getRandomSeed() != 0) {
          setRandomSeed(other.getRandomSeed());
        }
        if (other.hasSyncObj()) {
          mergeSyncObj(other.getSyncObj());
        }
        if (other.getPkSessionId() != 0) {
          setPkSessionId(other.getPkSessionId());
        }
        if (other.getFrameIndex() != 0) {
          setFrameIndex(other.getFrameIndex());
        }
        if (other.getClientSeq() != 0) {
          setClientSeq(other.getClientSeq());
        }
        if (syncsBuilder_ == null) {
          if (!other.syncs_.isEmpty()) {
            if (syncs_.isEmpty()) {
              syncs_ = other.syncs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSyncsIsMutable();
              syncs_.addAll(other.syncs_);
            }
            onChanged();
          }
        } else {
          if (!other.syncs_.isEmpty()) {
            if (syncsBuilder_.isEmpty()) {
              syncsBuilder_.dispose();
              syncsBuilder_ = null;
              syncs_ = other.syncs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              syncsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSyncsFieldBuilder() : null;
            } else {
              syncsBuilder_.addAllMessages(other.syncs_);
            }
          }
        }
        if (playerAIBuilder_ == null) {
          if (!other.playerAI_.isEmpty()) {
            if (playerAI_.isEmpty()) {
              playerAI_ = other.playerAI_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayerAIIsMutable();
              playerAI_.addAll(other.playerAI_);
            }
            onChanged();
          }
        } else {
          if (!other.playerAI_.isEmpty()) {
            if (playerAIBuilder_.isEmpty()) {
              playerAIBuilder_.dispose();
              playerAIBuilder_ = null;
              playerAI_ = other.playerAI_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playerAIBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPlayerAIFieldBuilder() : null;
            } else {
              playerAIBuilder_.addAllMessages(other.playerAI_);
            }
          }
        }
        if (npcAIBuilder_ == null) {
          if (!other.npcAI_.isEmpty()) {
            if (npcAI_.isEmpty()) {
              npcAI_ = other.npcAI_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureNpcAIIsMutable();
              npcAI_.addAll(other.npcAI_);
            }
            onChanged();
          }
        } else {
          if (!other.npcAI_.isEmpty()) {
            if (npcAIBuilder_.isEmpty()) {
              npcAIBuilder_.dispose();
              npcAIBuilder_ = null;
              npcAI_ = other.npcAI_;
              bitField0_ = (bitField0_ & ~0x00000004);
              npcAIBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNpcAIFieldBuilder() : null;
            } else {
              npcAIBuilder_.addAllMessages(other.npcAI_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FrameSyncDataArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FrameSyncDataArray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float deltaTimeFloat_ ;
      /**
       * <pre>
       *距离上一帧的时间差值，以秒为单位,客户端帧间时差以这个为准来运算
       * </pre>
       *
       * <code>float deltaTimeFloat = 15;</code>
       * @return The deltaTimeFloat.
       */
      @Override
      public float getDeltaTimeFloat() {
        return deltaTimeFloat_;
      }
      /**
       * <pre>
       *距离上一帧的时间差值，以秒为单位,客户端帧间时差以这个为准来运算
       * </pre>
       *
       * <code>float deltaTimeFloat = 15;</code>
       * @param value The deltaTimeFloat to set.
       * @return This builder for chaining.
       */
      public Builder setDeltaTimeFloat(float value) {
        
        deltaTimeFloat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距离上一帧的时间差值，以秒为单位,客户端帧间时差以这个为准来运算
       * </pre>
       *
       * <code>float deltaTimeFloat = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeltaTimeFloat() {
        
        deltaTimeFloat_ = 0F;
        onChanged();
        return this;
      }

      private long totalTime_ ;
      /**
       * <pre>
       *战斗持续的总时间，单位毫秒
       * </pre>
       *
       * <code>int64 totalTime = 8;</code>
       * @return The totalTime.
       */
      @Override
      public long getTotalTime() {
        return totalTime_;
      }
      /**
       * <pre>
       *战斗持续的总时间，单位毫秒
       * </pre>
       *
       * <code>int64 totalTime = 8;</code>
       * @param value The totalTime to set.
       * @return This builder for chaining.
       */
      public Builder setTotalTime(long value) {
        
        totalTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *战斗持续的总时间，单位毫秒
       * </pre>
       *
       * <code>int64 totalTime = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalTime() {
        
        totalTime_ = 0L;
        onChanged();
        return this;
      }

      private int randomSeed_ ;
      /**
       * <pre>
       *同步随机数种子
       * </pre>
       *
       * <code>int32 randomSeed = 9;</code>
       * @return The randomSeed.
       */
      @Override
      public int getRandomSeed() {
        return randomSeed_;
      }
      /**
       * <pre>
       *同步随机数种子
       * </pre>
       *
       * <code>int32 randomSeed = 9;</code>
       * @param value The randomSeed to set.
       * @return This builder for chaining.
       */
      public Builder setRandomSeed(int value) {
        
        randomSeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *同步随机数种子
       * </pre>
       *
       * <code>int32 randomSeed = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomSeed() {
        
        randomSeed_ = 0;
        onChanged();
        return this;
      }

      private SyncMechaInfo syncObj_;
      private com.google.protobuf.SingleFieldBuilderV3<
          SyncMechaInfo, SyncMechaInfo.Builder, SyncMechaInfoOrBuilder> syncObjBuilder_;
      /**
       * <pre>
       *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
       * @return Whether the syncObj field is set.
       */
      public boolean hasSyncObj() {
        return syncObjBuilder_ != null || syncObj_ != null;
      }
      /**
       * <pre>
       *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
       * @return The syncObj.
       */
      public SyncMechaInfo getSyncObj() {
        if (syncObjBuilder_ == null) {
          return syncObj_ == null ? SyncMechaInfo.getDefaultInstance() : syncObj_;
        } else {
          return syncObjBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
       */
      public Builder setSyncObj(SyncMechaInfo value) {
        if (syncObjBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          syncObj_ = value;
          onChanged();
        } else {
          syncObjBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
       */
      public Builder setSyncObj(
          SyncMechaInfo.Builder builderForValue) {
        if (syncObjBuilder_ == null) {
          syncObj_ = builderForValue.build();
          onChanged();
        } else {
          syncObjBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
       */
      public Builder mergeSyncObj(SyncMechaInfo value) {
        if (syncObjBuilder_ == null) {
          if (syncObj_ != null) {
            syncObj_ =
              SyncMechaInfo.newBuilder(syncObj_).mergeFrom(value).buildPartial();
          } else {
            syncObj_ = value;
          }
          onChanged();
        } else {
          syncObjBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
       */
      public Builder clearSyncObj() {
        if (syncObjBuilder_ == null) {
          syncObj_ = null;
          onChanged();
        } else {
          syncObj_ = null;
          syncObjBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
       */
      public SyncMechaInfo.Builder getSyncObjBuilder() {
        
        onChanged();
        return getSyncObjFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
       */
      public SyncMechaInfoOrBuilder getSyncObjOrBuilder() {
        if (syncObjBuilder_ != null) {
          return syncObjBuilder_.getMessageOrBuilder();
        } else {
          return syncObj_ == null ?
              SyncMechaInfo.getDefaultInstance() : syncObj_;
        }
      }
      /**
       * <pre>
       *客户端上报的时候填这里，可以不填同步数据信息内的，节省网络带宽
       * </pre>
       *
       * <code>.SyncFrame.SyncMechaInfo syncObj = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SyncMechaInfo, SyncMechaInfo.Builder, SyncMechaInfoOrBuilder>
          getSyncObjFieldBuilder() {
        if (syncObjBuilder_ == null) {
          syncObjBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SyncMechaInfo, SyncMechaInfo.Builder, SyncMechaInfoOrBuilder>(
                  getSyncObj(),
                  getParentForChildren(),
                  isClean());
          syncObj_ = null;
        }
        return syncObjBuilder_;
      }

      private int pkSessionId_ ;
      /**
       * <pre>
       *战斗sessionId
       * </pre>
       *
       * <code>int32 pkSessionId = 3;</code>
       * @return The pkSessionId.
       */
      @Override
      public int getPkSessionId() {
        return pkSessionId_;
      }
      /**
       * <pre>
       *战斗sessionId
       * </pre>
       *
       * <code>int32 pkSessionId = 3;</code>
       * @param value The pkSessionId to set.
       * @return This builder for chaining.
       */
      public Builder setPkSessionId(int value) {
        
        pkSessionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *战斗sessionId
       * </pre>
       *
       * <code>int32 pkSessionId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPkSessionId() {
        
        pkSessionId_ = 0;
        onChanged();
        return this;
      }

      private int frameIndex_ ;
      /**
       * <pre>
       *战斗服务器同步的服务器帧id，客户端上报时则表示是客户端收到过的服务器最近一次帧id
       * </pre>
       *
       * <code>int32 frameIndex = 2;</code>
       * @return The frameIndex.
       */
      @Override
      public int getFrameIndex() {
        return frameIndex_;
      }
      /**
       * <pre>
       *战斗服务器同步的服务器帧id，客户端上报时则表示是客户端收到过的服务器最近一次帧id
       * </pre>
       *
       * <code>int32 frameIndex = 2;</code>
       * @param value The frameIndex to set.
       * @return This builder for chaining.
       */
      public Builder setFrameIndex(int value) {
        
        frameIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *战斗服务器同步的服务器帧id，客户端上报时则表示是客户端收到过的服务器最近一次帧id
       * </pre>
       *
       * <code>int32 frameIndex = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrameIndex() {
        
        frameIndex_ = 0;
        onChanged();
        return this;
      }

      private int clientSeq_ ;
      /**
       * <pre>
       *客户端上报专用的本地帧序号，用于服务器过滤重复帧或旧帧
       * </pre>
       *
       * <code>int32 clientSeq = 4;</code>
       * @return The clientSeq.
       */
      @Override
      public int getClientSeq() {
        return clientSeq_;
      }
      /**
       * <pre>
       *客户端上报专用的本地帧序号，用于服务器过滤重复帧或旧帧
       * </pre>
       *
       * <code>int32 clientSeq = 4;</code>
       * @param value The clientSeq to set.
       * @return This builder for chaining.
       */
      public Builder setClientSeq(int value) {
        
        clientSeq_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端上报专用的本地帧序号，用于服务器过滤重复帧或旧帧
       * </pre>
       *
       * <code>int32 clientSeq = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearClientSeq() {
        
        clientSeq_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<FrameSyncData> syncs_ =
        java.util.Collections.emptyList();
      private void ensureSyncsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          syncs_ = new java.util.ArrayList<FrameSyncData>(syncs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          FrameSyncData, FrameSyncData.Builder, FrameSyncDataOrBuilder> syncsBuilder_;

      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public java.util.List<FrameSyncData> getSyncsList() {
        if (syncsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(syncs_);
        } else {
          return syncsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public int getSyncsCount() {
        if (syncsBuilder_ == null) {
          return syncs_.size();
        } else {
          return syncsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public FrameSyncData getSyncs(int index) {
        if (syncsBuilder_ == null) {
          return syncs_.get(index);
        } else {
          return syncsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public Builder setSyncs(
          int index, FrameSyncData value) {
        if (syncsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSyncsIsMutable();
          syncs_.set(index, value);
          onChanged();
        } else {
          syncsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public Builder setSyncs(
          int index, FrameSyncData.Builder builderForValue) {
        if (syncsBuilder_ == null) {
          ensureSyncsIsMutable();
          syncs_.set(index, builderForValue.build());
          onChanged();
        } else {
          syncsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public Builder addSyncs(FrameSyncData value) {
        if (syncsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSyncsIsMutable();
          syncs_.add(value);
          onChanged();
        } else {
          syncsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public Builder addSyncs(
          int index, FrameSyncData value) {
        if (syncsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSyncsIsMutable();
          syncs_.add(index, value);
          onChanged();
        } else {
          syncsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public Builder addSyncs(
          FrameSyncData.Builder builderForValue) {
        if (syncsBuilder_ == null) {
          ensureSyncsIsMutable();
          syncs_.add(builderForValue.build());
          onChanged();
        } else {
          syncsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public Builder addSyncs(
          int index, FrameSyncData.Builder builderForValue) {
        if (syncsBuilder_ == null) {
          ensureSyncsIsMutable();
          syncs_.add(index, builderForValue.build());
          onChanged();
        } else {
          syncsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public Builder addAllSyncs(
          Iterable<? extends FrameSyncData> values) {
        if (syncsBuilder_ == null) {
          ensureSyncsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, syncs_);
          onChanged();
        } else {
          syncsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public Builder clearSyncs() {
        if (syncsBuilder_ == null) {
          syncs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          syncsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public Builder removeSyncs(int index) {
        if (syncsBuilder_ == null) {
          ensureSyncsIsMutable();
          syncs_.remove(index);
          onChanged();
        } else {
          syncsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public FrameSyncData.Builder getSyncsBuilder(
          int index) {
        return getSyncsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public FrameSyncDataOrBuilder getSyncsOrBuilder(
          int index) {
        if (syncsBuilder_ == null) {
          return syncs_.get(index);  } else {
          return syncsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public java.util.List<? extends FrameSyncDataOrBuilder>
           getSyncsOrBuilderList() {
        if (syncsBuilder_ != null) {
          return syncsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(syncs_);
        }
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public FrameSyncData.Builder addSyncsBuilder() {
        return getSyncsFieldBuilder().addBuilder(
            FrameSyncData.getDefaultInstance());
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public FrameSyncData.Builder addSyncsBuilder(
          int index) {
        return getSyncsFieldBuilder().addBuilder(
            index, FrameSyncData.getDefaultInstance());
      }
      /**
       * <pre>
       *0到多个同步数据信息
       * </pre>
       *
       * <code>repeated .SyncFrame.FrameSyncData syncs = 1;</code>
       */
      public java.util.List<FrameSyncData.Builder>
           getSyncsBuilderList() {
        return getSyncsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          FrameSyncData, FrameSyncData.Builder, FrameSyncDataOrBuilder>
          getSyncsFieldBuilder() {
        if (syncsBuilder_ == null) {
          syncsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              FrameSyncData, FrameSyncData.Builder, FrameSyncDataOrBuilder>(
                  syncs_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          syncs_ = null;
        }
        return syncsBuilder_;
      }

      private java.util.List<StringStringKeyValue> playerAI_ =
        java.util.Collections.emptyList();
      private void ensurePlayerAIIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          playerAI_ = new java.util.ArrayList<StringStringKeyValue>(playerAI_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          StringStringKeyValue, StringStringKeyValue.Builder, StringStringKeyValueOrBuilder> playerAIBuilder_;

      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public java.util.List<StringStringKeyValue> getPlayerAIList() {
        if (playerAIBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerAI_);
        } else {
          return playerAIBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public int getPlayerAICount() {
        if (playerAIBuilder_ == null) {
          return playerAI_.size();
        } else {
          return playerAIBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public StringStringKeyValue getPlayerAI(int index) {
        if (playerAIBuilder_ == null) {
          return playerAI_.get(index);
        } else {
          return playerAIBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public Builder setPlayerAI(
          int index, StringStringKeyValue value) {
        if (playerAIBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerAIIsMutable();
          playerAI_.set(index, value);
          onChanged();
        } else {
          playerAIBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public Builder setPlayerAI(
          int index, StringStringKeyValue.Builder builderForValue) {
        if (playerAIBuilder_ == null) {
          ensurePlayerAIIsMutable();
          playerAI_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerAIBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public Builder addPlayerAI(StringStringKeyValue value) {
        if (playerAIBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerAIIsMutable();
          playerAI_.add(value);
          onChanged();
        } else {
          playerAIBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public Builder addPlayerAI(
          int index, StringStringKeyValue value) {
        if (playerAIBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerAIIsMutable();
          playerAI_.add(index, value);
          onChanged();
        } else {
          playerAIBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public Builder addPlayerAI(
          StringStringKeyValue.Builder builderForValue) {
        if (playerAIBuilder_ == null) {
          ensurePlayerAIIsMutable();
          playerAI_.add(builderForValue.build());
          onChanged();
        } else {
          playerAIBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public Builder addPlayerAI(
          int index, StringStringKeyValue.Builder builderForValue) {
        if (playerAIBuilder_ == null) {
          ensurePlayerAIIsMutable();
          playerAI_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerAIBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public Builder addAllPlayerAI(
          Iterable<? extends StringStringKeyValue> values) {
        if (playerAIBuilder_ == null) {
          ensurePlayerAIIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerAI_);
          onChanged();
        } else {
          playerAIBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public Builder clearPlayerAI() {
        if (playerAIBuilder_ == null) {
          playerAI_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playerAIBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public Builder removePlayerAI(int index) {
        if (playerAIBuilder_ == null) {
          ensurePlayerAIIsMutable();
          playerAI_.remove(index);
          onChanged();
        } else {
          playerAIBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public StringStringKeyValue.Builder getPlayerAIBuilder(
          int index) {
        return getPlayerAIFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public StringStringKeyValueOrBuilder getPlayerAIOrBuilder(
          int index) {
        if (playerAIBuilder_ == null) {
          return playerAI_.get(index);  } else {
          return playerAIBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public java.util.List<? extends StringStringKeyValueOrBuilder>
           getPlayerAIOrBuilderList() {
        if (playerAIBuilder_ != null) {
          return playerAIBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerAI_);
        }
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public StringStringKeyValue.Builder addPlayerAIBuilder() {
        return getPlayerAIFieldBuilder().addBuilder(
            StringStringKeyValue.getDefaultInstance());
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public StringStringKeyValue.Builder addPlayerAIBuilder(
          int index) {
        return getPlayerAIFieldBuilder().addBuilder(
            index, StringStringKeyValue.getDefaultInstance());
      }
      /**
       * <pre>
       *key：掉线转AI的玩家playerId&#64;zoneId;value：负责跑该AI的玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.StringStringKeyValue playerAI = 13;</code>
       */
      public java.util.List<StringStringKeyValue.Builder>
           getPlayerAIBuilderList() {
        return getPlayerAIFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          StringStringKeyValue, StringStringKeyValue.Builder, StringStringKeyValueOrBuilder>
          getPlayerAIFieldBuilder() {
        if (playerAIBuilder_ == null) {
          playerAIBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              StringStringKeyValue, StringStringKeyValue.Builder, StringStringKeyValueOrBuilder>(
                  playerAI_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          playerAI_ = null;
        }
        return playerAIBuilder_;
      }

      private java.util.List<IntStringKeyValue> npcAI_ =
        java.util.Collections.emptyList();
      private void ensureNpcAIIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          npcAI_ = new java.util.ArrayList<IntStringKeyValue>(npcAI_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          IntStringKeyValue, IntStringKeyValue.Builder, IntStringKeyValueOrBuilder> npcAIBuilder_;

      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public java.util.List<IntStringKeyValue> getNpcAIList() {
        if (npcAIBuilder_ == null) {
          return java.util.Collections.unmodifiableList(npcAI_);
        } else {
          return npcAIBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public int getNpcAICount() {
        if (npcAIBuilder_ == null) {
          return npcAI_.size();
        } else {
          return npcAIBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public IntStringKeyValue getNpcAI(int index) {
        if (npcAIBuilder_ == null) {
          return npcAI_.get(index);
        } else {
          return npcAIBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public Builder setNpcAI(
          int index, IntStringKeyValue value) {
        if (npcAIBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNpcAIIsMutable();
          npcAI_.set(index, value);
          onChanged();
        } else {
          npcAIBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public Builder setNpcAI(
          int index, IntStringKeyValue.Builder builderForValue) {
        if (npcAIBuilder_ == null) {
          ensureNpcAIIsMutable();
          npcAI_.set(index, builderForValue.build());
          onChanged();
        } else {
          npcAIBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public Builder addNpcAI(IntStringKeyValue value) {
        if (npcAIBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNpcAIIsMutable();
          npcAI_.add(value);
          onChanged();
        } else {
          npcAIBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public Builder addNpcAI(
          int index, IntStringKeyValue value) {
        if (npcAIBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNpcAIIsMutable();
          npcAI_.add(index, value);
          onChanged();
        } else {
          npcAIBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public Builder addNpcAI(
          IntStringKeyValue.Builder builderForValue) {
        if (npcAIBuilder_ == null) {
          ensureNpcAIIsMutable();
          npcAI_.add(builderForValue.build());
          onChanged();
        } else {
          npcAIBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public Builder addNpcAI(
          int index, IntStringKeyValue.Builder builderForValue) {
        if (npcAIBuilder_ == null) {
          ensureNpcAIIsMutable();
          npcAI_.add(index, builderForValue.build());
          onChanged();
        } else {
          npcAIBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public Builder addAllNpcAI(
          Iterable<? extends IntStringKeyValue> values) {
        if (npcAIBuilder_ == null) {
          ensureNpcAIIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, npcAI_);
          onChanged();
        } else {
          npcAIBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public Builder clearNpcAI() {
        if (npcAIBuilder_ == null) {
          npcAI_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          npcAIBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public Builder removeNpcAI(int index) {
        if (npcAIBuilder_ == null) {
          ensureNpcAIIsMutable();
          npcAI_.remove(index);
          onChanged();
        } else {
          npcAIBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public IntStringKeyValue.Builder getNpcAIBuilder(
          int index) {
        return getNpcAIFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public IntStringKeyValueOrBuilder getNpcAIOrBuilder(
          int index) {
        if (npcAIBuilder_ == null) {
          return npcAI_.get(index);  } else {
          return npcAIBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public java.util.List<? extends IntStringKeyValueOrBuilder>
           getNpcAIOrBuilderList() {
        if (npcAIBuilder_ != null) {
          return npcAIBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(npcAI_);
        }
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public IntStringKeyValue.Builder addNpcAIBuilder() {
        return getNpcAIFieldBuilder().addBuilder(
            IntStringKeyValue.getDefaultInstance());
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public IntStringKeyValue.Builder addNpcAIBuilder(
          int index) {
        return getNpcAIFieldBuilder().addBuilder(
            index, IntStringKeyValue.getDefaultInstance());
      }
      /**
       * <pre>
       *key:需要跑ai的小怪id除以5得到的余数，即01234;value:负责跑这些小怪AI的玩家玩家playerId&#64;zoneId
       * </pre>
       *
       * <code>repeated .SyncFrame.IntStringKeyValue npcAI = 14;</code>
       */
      public java.util.List<IntStringKeyValue.Builder>
           getNpcAIBuilderList() {
        return getNpcAIFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          IntStringKeyValue, IntStringKeyValue.Builder, IntStringKeyValueOrBuilder>
          getNpcAIFieldBuilder() {
        if (npcAIBuilder_ == null) {
          npcAIBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              IntStringKeyValue, IntStringKeyValue.Builder, IntStringKeyValueOrBuilder>(
                  npcAI_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          npcAI_ = null;
        }
        return npcAIBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SyncFrame.FrameSyncDataArray)
    }

    // @@protoc_insertion_point(class_scope:SyncFrame.FrameSyncDataArray)
    private static final FrameSyncDataArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FrameSyncDataArray();
    }

    public static FrameSyncDataArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FrameSyncDataArray>
        PARSER = new com.google.protobuf.AbstractParser<FrameSyncDataArray>() {
      @Override
      public FrameSyncDataArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FrameSyncDataArray(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FrameSyncDataArray> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<FrameSyncDataArray> getParserForType() {
      return PARSER;
    }

    @Override
    public FrameSyncDataArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IntStringKeyValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SyncFrame.IntStringKeyValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *键值对的整数Key
     * </pre>
     *
     * <code>int32 key = 1;</code>
     * @return The key.
     */
    int getKey();

    /**
     * <pre>
     *键值对的字符串Value
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The value.
     */
    String getValue();
    /**
     * <pre>
     *键值对的字符串Value
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code SyncFrame.IntStringKeyValue}
   */
  public static final class IntStringKeyValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SyncFrame.IntStringKeyValue)
      IntStringKeyValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IntStringKeyValue.newBuilder() to construct.
    private IntStringKeyValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IntStringKeyValue() {
      value_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new IntStringKeyValue();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IntStringKeyValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              key_ = input.readInt32();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Framesync.internal_static_SyncFrame_IntStringKeyValue_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Framesync.internal_static_SyncFrame_IntStringKeyValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IntStringKeyValue.class, Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private int key_;
    /**
     * <pre>
     *键值对的整数Key
     * </pre>
     *
     * <code>int32 key = 1;</code>
     * @return The key.
     */
    @Override
    public int getKey() {
      return key_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile Object value_;
    /**
     * <pre>
     *键值对的字符串Value
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The value.
     */
    @Override
    public String getValue() {
      Object ref = value_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *键值对的字符串Value
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    @Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      Object ref = value_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (key_ != 0) {
        output.writeInt32(1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (key_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof IntStringKeyValue)) {
        return super.equals(obj);
      }
      IntStringKeyValue other = (IntStringKeyValue) obj;

      if (getKey()
          != other.getKey()) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static IntStringKeyValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IntStringKeyValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IntStringKeyValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IntStringKeyValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IntStringKeyValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IntStringKeyValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IntStringKeyValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static IntStringKeyValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static IntStringKeyValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static IntStringKeyValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static IntStringKeyValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static IntStringKeyValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(IntStringKeyValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SyncFrame.IntStringKeyValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SyncFrame.IntStringKeyValue)
        IntStringKeyValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Framesync.internal_static_SyncFrame_IntStringKeyValue_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Framesync.internal_static_SyncFrame_IntStringKeyValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                IntStringKeyValue.class, Builder.class);
      }

      // Construct using SyncFrame.Framesync.IntStringKeyValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        key_ = 0;

        value_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Framesync.internal_static_SyncFrame_IntStringKeyValue_descriptor;
      }

      @Override
      public IntStringKeyValue getDefaultInstanceForType() {
        return IntStringKeyValue.getDefaultInstance();
      }

      @Override
      public IntStringKeyValue build() {
        IntStringKeyValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public IntStringKeyValue buildPartial() {
        IntStringKeyValue result = new IntStringKeyValue(this);
        result.key_ = key_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof IntStringKeyValue) {
          return mergeFrom((IntStringKeyValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(IntStringKeyValue other) {
        if (other == IntStringKeyValue.getDefaultInstance()) return this;
        if (other.getKey() != 0) {
          setKey(other.getKey());
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        IntStringKeyValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (IntStringKeyValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int key_ ;
      /**
       * <pre>
       *键值对的整数Key
       * </pre>
       *
       * <code>int32 key = 1;</code>
       * @return The key.
       */
      @Override
      public int getKey() {
        return key_;
      }
      /**
       * <pre>
       *键值对的整数Key
       * </pre>
       *
       * <code>int32 key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(int value) {
        
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *键值对的整数Key
       * </pre>
       *
       * <code>int32 key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        
        key_ = 0;
        onChanged();
        return this;
      }

      private Object value_ = "";
      /**
       * <pre>
       *键值对的字符串Value
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The value.
       */
      public String getValue() {
        Object ref = value_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *键值对的字符串Value
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *键值对的字符串Value
       * </pre>
       *
       * <code>string value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *键值对的字符串Value
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *键值对的字符串Value
       * </pre>
       *
       * <code>string value = 2;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SyncFrame.IntStringKeyValue)
    }

    // @@protoc_insertion_point(class_scope:SyncFrame.IntStringKeyValue)
    private static final IntStringKeyValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IntStringKeyValue();
    }

    public static IntStringKeyValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IntStringKeyValue>
        PARSER = new com.google.protobuf.AbstractParser<IntStringKeyValue>() {
      @Override
      public IntStringKeyValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IntStringKeyValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IntStringKeyValue> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<IntStringKeyValue> getParserForType() {
      return PARSER;
    }

    @Override
    public IntStringKeyValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StringStringKeyValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SyncFrame.StringStringKeyValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *键值对的字符串Key
     * </pre>
     *
     * <code>string key = 1;</code>
     * @return The key.
     */
    String getKey();
    /**
     * <pre>
     *键值对的字符串Key
     * </pre>
     *
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <pre>
     *键值对的字符串Value
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The value.
     */
    String getValue();
    /**
     * <pre>
     *键值对的字符串Value
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code SyncFrame.StringStringKeyValue}
   */
  public static final class StringStringKeyValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SyncFrame.StringStringKeyValue)
      StringStringKeyValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StringStringKeyValue.newBuilder() to construct.
    private StringStringKeyValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StringStringKeyValue() {
      key_ = "";
      value_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new StringStringKeyValue();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StringStringKeyValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Framesync.internal_static_SyncFrame_StringStringKeyValue_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Framesync.internal_static_SyncFrame_StringStringKeyValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StringStringKeyValue.class, Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile Object key_;
    /**
     * <pre>
     *键值对的字符串Key
     * </pre>
     *
     * <code>string key = 1;</code>
     * @return The key.
     */
    @Override
    public String getKey() {
      Object ref = key_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *键值对的字符串Key
     * </pre>
     *
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile Object value_;
    /**
     * <pre>
     *键值对的字符串Value
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The value.
     */
    @Override
    public String getValue() {
      Object ref = value_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *键值对的字符串Value
     * </pre>
     *
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    @Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      Object ref = value_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof StringStringKeyValue)) {
        return super.equals(obj);
      }
      StringStringKeyValue other = (StringStringKeyValue) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static StringStringKeyValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StringStringKeyValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StringStringKeyValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StringStringKeyValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StringStringKeyValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StringStringKeyValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StringStringKeyValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StringStringKeyValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static StringStringKeyValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static StringStringKeyValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static StringStringKeyValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StringStringKeyValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(StringStringKeyValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SyncFrame.StringStringKeyValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SyncFrame.StringStringKeyValue)
        StringStringKeyValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Framesync.internal_static_SyncFrame_StringStringKeyValue_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Framesync.internal_static_SyncFrame_StringStringKeyValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                StringStringKeyValue.class, Builder.class);
      }

      // Construct using SyncFrame.Framesync.StringStringKeyValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        key_ = "";

        value_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Framesync.internal_static_SyncFrame_StringStringKeyValue_descriptor;
      }

      @Override
      public StringStringKeyValue getDefaultInstanceForType() {
        return StringStringKeyValue.getDefaultInstance();
      }

      @Override
      public StringStringKeyValue build() {
        StringStringKeyValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public StringStringKeyValue buildPartial() {
        StringStringKeyValue result = new StringStringKeyValue(this);
        result.key_ = key_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StringStringKeyValue) {
          return mergeFrom((StringStringKeyValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StringStringKeyValue other) {
        if (other == StringStringKeyValue.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StringStringKeyValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StringStringKeyValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object key_ = "";
      /**
       * <pre>
       *键值对的字符串Key
       * </pre>
       *
       * <code>string key = 1;</code>
       * @return The key.
       */
      public String getKey() {
        Object ref = key_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *键值对的字符串Key
       * </pre>
       *
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *键值对的字符串Key
       * </pre>
       *
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *键值对的字符串Key
       * </pre>
       *
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *键值对的字符串Key
       * </pre>
       *
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private Object value_ = "";
      /**
       * <pre>
       *键值对的字符串Value
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The value.
       */
      public String getValue() {
        Object ref = value_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *键值对的字符串Value
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *键值对的字符串Value
       * </pre>
       *
       * <code>string value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *键值对的字符串Value
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *键值对的字符串Value
       * </pre>
       *
       * <code>string value = 2;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SyncFrame.StringStringKeyValue)
    }

    // @@protoc_insertion_point(class_scope:SyncFrame.StringStringKeyValue)
    private static final StringStringKeyValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StringStringKeyValue();
    }

    public static StringStringKeyValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StringStringKeyValue>
        PARSER = new com.google.protobuf.AbstractParser<StringStringKeyValue>() {
      @Override
      public StringStringKeyValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StringStringKeyValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StringStringKeyValue> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<StringStringKeyValue> getParserForType() {
      return PARSER;
    }

    @Override
    public StringStringKeyValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncFrame_SyncMechaInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SyncFrame_SyncMechaInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncFrame_FrameSyncData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SyncFrame_FrameSyncData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncFrame_FrameSyncDataArray_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SyncFrame_FrameSyncDataArray_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncFrame_IntStringKeyValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SyncFrame_IntStringKeyValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncFrame_StringStringKeyValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SyncFrame_StringStringKeyValue_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\017framesync.proto\022\tSyncFrame\"1\n\rSyncMech" +
      "aInfo\022\016\n\006zoneId\030\001 \001(\005\022\020\n\010playerId\030\002 \001(\005\"" +
      "\213\001\n\rFrameSyncData\022)\n\007syncObj\030\004 \001(\0132\030.Syn" +
      "cFrame.SyncMechaInfo\0227\n\021frameSyncDataTyp" +
      "e\030\001 \001(\0162\034.SyncFrame.FrameSyncDataType\022\026\n" +
      "\016frameSyncBytes\030\002 \001(\014\"\303\002\n\022FrameSyncDataA" +
      "rray\022\026\n\016deltaTimeFloat\030\017 \001(\002\022\021\n\ttotalTim" +
      "e\030\010 \001(\003\022\022\n\nrandomSeed\030\t \001(\005\022)\n\007syncObj\030\005" +
      " \001(\0132\030.SyncFrame.SyncMechaInfo\022\023\n\013pkSess" +
      "ionId\030\003 \001(\005\022\022\n\nframeIndex\030\002 \001(\005\022\021\n\tclien" +
      "tSeq\030\004 \001(\005\022\'\n\005syncs\030\001 \003(\0132\030.SyncFrame.Fr" +
      "ameSyncData\0221\n\010playerAI\030\r \003(\0132\037.SyncFram" +
      "e.StringStringKeyValue\022+\n\005npcAI\030\016 \003(\0132\034." +
      "SyncFrame.IntStringKeyValue\"/\n\021IntString" +
      "KeyValue\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\t\"2\n\024" +
      "StringStringKeyValue\022\013\n\003key\030\001 \001(\t\022\r\n\005val" +
      "ue\030\002 \001(\t*\214\002\n\021FrameSyncDataType\022\032\n\026COMMON" +
      "_UNKNOW_SYNCTYPE\020\000\022\026\n\022FRAME_SYNC_CONNECT" +
      "\020\001\022\024\n\020FRAME_SYNC_READY\020\002\022\024\n\020FRAME_SYNC_S" +
      "TART\020\003\022\031\n\025FRAME_SYNC_CHANGE_POS\020\004\022\031\n\025FRA" +
      "ME_SYNC_PLAY_SKILL\020\005\022\031\n\025FRAME_SYNC_MOVE_" +
      "START\020\006\022\031\n\025FRAME_SYNC_MOVE_SPEED\020\007\022\027\n\023FR" +
      "AME_SYNC_MOVE_END\020\010\022\022\n\016FRAME_SYNC_END\020\026b" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_SyncFrame_SyncMechaInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SyncFrame_SyncMechaInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SyncFrame_SyncMechaInfo_descriptor,
        new String[] { "ZoneId", "PlayerId", });
    internal_static_SyncFrame_FrameSyncData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SyncFrame_FrameSyncData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SyncFrame_FrameSyncData_descriptor,
        new String[] { "SyncObj", "FrameSyncDataType", "FrameSyncBytes", });
    internal_static_SyncFrame_FrameSyncDataArray_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_SyncFrame_FrameSyncDataArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SyncFrame_FrameSyncDataArray_descriptor,
        new String[] { "DeltaTimeFloat", "TotalTime", "RandomSeed", "SyncObj", "PkSessionId", "FrameIndex", "ClientSeq", "Syncs", "PlayerAI", "NpcAI", });
    internal_static_SyncFrame_IntStringKeyValue_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_SyncFrame_IntStringKeyValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SyncFrame_IntStringKeyValue_descriptor,
        new String[] { "Key", "Value", });
    internal_static_SyncFrame_StringStringKeyValue_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_SyncFrame_StringStringKeyValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SyncFrame_StringStringKeyValue_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
